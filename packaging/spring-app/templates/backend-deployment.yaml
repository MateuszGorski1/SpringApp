apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-database-before-startup
        image: busybox
        command:  ["sh", "-c", "until nc -z postgres 5432 > /dev/null; do echo Waiting for database.; sleep 2; done;"]
      containers:
        - name: backend-service
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
          env:
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_password
            # Name of postgres service
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db_host
